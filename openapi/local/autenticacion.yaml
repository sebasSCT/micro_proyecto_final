openapi: 3.0.0
info:
  title: API de Autenticacion
  version: 1.0.0
  description: API para gestionar usuarios, incluyendo registro, login,cambio de contraseña y operaciones CRUD de autenticacion
servers:
  - url: http://localhost:8087
    description: Servidor local de Autenticacion

paths:
  /api/auth/usuarios/login:
    post:
      summary: Iniciar sesión
      description: Autentica un usuario y devuelve un token JWT o si el caso un mensaje de error
      tags:
        - Autenticación
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginDTO'
      responses:
        '200':
          description: Login exitoso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenDTO'
        '400':
          description: Datos de entrada incompletos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MensajeDTO'
        '401':
          description: Credenciales inválidas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MensajeDTO'
        '403':
          description: Usuario inactivo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MensajeDTO'
        '404':
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MensajeDTO'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MensajeDTO'

  /api/auth/usuarios:
    post:
      summary: Registrar nuevo usuario
      description: Crea un nuevo usuario en el sistema
      tags:
        - Autenticación
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistroUsuarioDTO'
      responses:
        '201':
          description: Usuario registrado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MensajeDTO'
        '400':
          description: Datos de registro inválidos o incompletos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MensajeDTO'
        '409':
          description: El usuario ya existe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MensajeDTO'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MensajeDTO'

  /api/auth/usuarios/password{codigo}:
    patch:
      summary: Cambiar contraseña
      description: Cambia la contraseña de un usuario existente
      tags:
        - Autenticación
      security:
        - bearerAuth: [ ]
      parameters:
        - in: path
          name: codigo
          required: true
          schema:
            type: string
          description: Código del usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CambioPasswordDTO'
      responses:
        '200':
          description: Contraseña actualizada con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MensajeDTO'
        '400':
          description: Datos de cambio de contraseña inválidos o incompletos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MensajeDTO'
        '404':
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MensajeDTO'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MensajeDTO'

  /api/usuarios/{codigo}:
    put:
      summary: Actualizar perfil de usuario
      description: Actualiza la información del perfil de un usuario existente
      tags:
        - Usuario
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: codigo
          required: true
          schema:
            type: string
          description: Código del usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActualizarUsuarioDTO'
      responses:
        '200':
          description: Usuario actualizado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetalleUsuarioDTO'
        '400':
          description: Datos de actualización inválidos o incompletos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MensajeDTO'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MensajeDTO'
        '404':
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MensajeDTO'
        '409':
          description: Usuario ya existe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MensajeDTO'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MensajeDTO'


    delete:
      summary: Eliminar cuenta de usuario
      description: Elimina la cuenta de un usuario del sistema
      tags:
        - Usuario
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: codigo
          required: true
          schema:
            type: string
          description: Código del usuario a eliminar
      responses:
        '200':
          description: Usuario eliminado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MensajeDTO'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MensajeDTO'
        '404':
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MensajeDTO'
        '403':
          description: Usuario inactivo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MensajeDTO'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MensajeDTO'

    get:
      summary: Obtener detalles de usuario
      description: Obtiene los detalles de un usuario específico
      tags:
        - Usuario
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: codigo
          required: true
          schema:
            type: string
          description: Código del usuario
      responses:
        '200':
          description: Detalles de usuario obtenidos exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetalleUsuarioDTO'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MensajeDTO'
        '404':
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MensajeDTO'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MensajeDTO'

  /api/general/usuarios:
    get:
      summary: Listar todos los usuarios
      description: Obtiene una lista paginada de los usuarios registrados en el sistema
      tags:
        - General
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 0
          description: Número de página
        - in: query
          name: size
          schema:
            type: integer
            default: 10
          description: Tamaño de la página
      responses:
        '200':
          description: Lista de usuarios obtenida exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageItemUsuarioDTO'
        '404':
          description: No se encontraron usuarios
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MensajeDTO'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MensajeDTO'

  /api/general/email/password/{email}:
    get:
      summary: Enviar un email
      description: Envía un email al usuario que pidió recuperar la contraseña el cual devuelve un token
      tags:
        - General
      parameters:
        - in: path
          name: email
          schema:
            type: string
          description: Email del usuario
      responses:
        '200':
          description: Email enviado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MensajeDTO'
        '400':
          description: Formato de correo electrónico inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MensajeDTO'
        '404':
          description: Correo electrónico no encontrado en la base de datos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MensajeDTO'
        '429':
          description: Límite de envío de correos alcanzado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MensajeDTO'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MensajeDTO'
        '503':
          description: Servidor de correo no disponible
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MensajeDTO'
      
  /actuator/health:
    get:
      summary: Verifica el estado general de la aplicación.
      description: Devuelve el estado de la aplicación, incluyendo componentes críticos y subcomponentes, si están configurados.
      tags:
      - Metrics
      responses:
        '200':
          description: Estado de la aplicación.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Estado general de la aplicación (ej. "UP" o "DOWN").
                    example: "UP"
                  components:
                    type: object
                    description: Estados de los subcomponentes.
                    properties:
                      db:
                        type: object
                        properties:
                          status:
                            type: string
                            example: "UP"
                          details:
                            type: object
                            properties:
                              database:
                                type: string
                                example: "PostgreSQL"
                              hello:
                                type: string
                                example: "World"
                      diskSpace:
                        type: object
                        properties:
                          status:
                            type: string
                            example: "UP"
                          details:
                            type: object
                            properties:
                              total:
                                type: integer
                                example: 499963174912
                              free:
                                type: integer
                                example: 39286927360
                              threshold:
                                type: integer
                                example: 10485760
        '503':
          description: La aplicación no está disponible.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "DOWN"
                  message:
                    type: string
                    example: "The application is currently experiencing issues."

  /actuator/metrics:
    get:
      summary: Obtiene todas las métricas disponibles.
      description: Devuelve una lista de métricas expuestas por el Actuator.
      tags:
       - Metrics
      responses:
        '200':
          description: Lista de métricas disponibles.
          content:
            application/json:
              schema:
                type: object
                properties:
                  names:
                    type: array
                    items:
                      type: string
                    example: ["jvm.memory.used", "jvm.memory.max", "http.server.requests"]

  /actuator/metrics/{metricName}:
    get:
      summary: Obtiene detalles de una métrica específica.
      description: Devuelve los datos de una métrica específica, incluyendo etiquetas y valores actuales.
      tags:
       - Metrics
      parameters:
        - in: path
          name: metricName
          required: true
          schema:
            type: string
          description: Nombre de la métrica específica.
      responses:
        '200':
          description: Detalles de la métrica especificada.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: "jvm.memory.used"
                  description:
                    type: string
                    example: "Current memory usage"
                  baseUnit:
                    type: string
                    example: "bytes"
                  measurements:
                    type: array
                    items:
                      type: object
                      properties:
                        statistic:
                          type: string
                          example: "VALUE"
                        value:
                          type: number
                          example: 12345678
                  availableTags:
                    type: array
                    items:
                      type: object
                      properties:
                        tag:
                          type: string
                          example: "area"
                        values:
                          type: array
                          items:
                            type: string
                            example: ["heap", "nonheap"]

  /actuator/info:
    get:
      summary: Proporciona información de la aplicación.
      description: Devuelve información general sobre la aplicación, como la versión, nombre, etc. Estos detalles se configuran en `application.properties` o `application.yml`.
      tags:
       - Metrics
      responses:
        '200':
          description: Información de la aplicación.
          content:
            application/json:
              schema:
                type: object
                properties:
                  app:
                    type: object
                    properties:
                      name:
                        type: string
                        example: "My Application"
                      version:
                        type: string
                        example: "1.0.0"
                  build:
                    type: object
                    properties:
                      artifact:
                        type: string
                        example: "my-app"
                      group:
                        type: string
                        example: "com.example"
                      name:
                        type: string
                        example: "My Application"
                      version:
                        type: string
                        example: "1.0.0"

components:
  schemas:

    MensajeDTO:
      type: object
      properties:
        error:
          type: boolean
        respuesta:
          type: T
        required:
          - error
          - respuesta

    LoginDTO:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password

    TokenDTO:
      type: object
      properties:
        token:
          type: string

    RegistroUsuarioDTO:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password

    CambioPasswordDTO:
      type: object
      properties:
        nuevaPassword:
          type: string
      required:
        - nuevaPassword

    ActualizarUsuarioDTO:
      type: object
      properties:
        email:
          type: string
      required:
        - email

    DetalleUsuarioDTO:
      type: object
      properties:
        codigo:
          type: string
        email:
          type: string

    PageItemUsuarioDTO:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ItemUsuarioDTO'
        pageable:
          type: object
          properties:
            sort:
              type: object
              properties:
                empty:
                  type: boolean
                sorted:
                  type: boolean
                unsorted:
                  type: boolean
            pageNumber:
              type: integer
            pageSize:
              type: integer
            offset:
              type: integer
            paged:
              type: boolean
            unpaged:
              type: boolean
        totalPages:
          type: integer
        totalElements:
          type: integer
        last:
          type: boolean
        size:
          type: integer
        number:
          type: integer
        sort:
          type: object
          properties:
            empty:
              type: boolean
            sorted:
              type: boolean
            unsorted:
              type: boolean
        numberOfElements:
          type: integer
        first:
          type: boolean
        empty:
          type: boolean

    ItemUsuarioDTO:
      type: object
      properties:
        codigo:
          type: string
        email:
          type: string

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT